{"version":3,"sources":["utils/function.tsx","pages/dashboard/Dashboard.Styled.tsx","components/filter/index.styled.tsx","components/Elements/Input.tsx","components/Elements/Select.tsx","components/filter/index.tsx","components/content/GameItem.Styled.tsx","components/content/GameItem.tsx","pages/dashboard/Dashboard.tsx","pages/contact/Contact.Styled.tsx","components/Elements/TextArea.tsx","pages/contact/Contact.tsx","static/constant.tsx","components/header/Header.styled.tsx","components/header/Header.tsx","routes/AppRouter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["objSort","data","property","direction","sort","first","second","DashboardWrapper","styled","div","FilterWrapper","ContentWrapper","FilterContent","Input","props","useState","value","setValue","label","type","onChange","className","e","target","Select","options","show","setShow","ref","useOnclickOutside","useEffect","style","display","width","onClick","map","option","index","initFilter","name","score","Filter","getFilterObj","filterObj","setFilterObj","handleChange","GameItemWrapper","GameItem","releaseDate","Date","first_release_date","date","getDate","month","getMonth","getFullYear","summary","Math","floor","rating","Store","Dashbaord","items","setItems","loading","setLoading","Axios","get","then","res","catch","err","filteredItems","filter","item","pass","toUpperCase","indexOf","parseInt","Number","Obj","src","id","ContactWrapper","TextArea","Contact","HeaderWrapper","to","AppRouter","Header","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdc735cb.chunk.js","sourcesContent":["const objSort = (data: any, property: any, direction:boolean) => {\r\n  data.sort(function (first: any, second: any) {\r\n    if (first[property] > second[property]) return direction ? -1 : 1;\r\n    return direction ? 1 : -1;\r\n  });\r\n  return data;\r\n};\r\n\r\nexport { objSort }","import styled from 'styled-components';\r\n\r\nconst DashboardWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  /* Tablet */\r\n  @media screen and (min-width: 640px) {\r\n\r\n  }\r\n  /* desktop */\r\n  @media screen and (max-width: 1280px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst FilterWrapper = styled.div`\r\n    /* mobile */\r\n    display: block;\r\n    margin-right: 10px;\r\n    margin-left: 10px;\r\n    /* Tablet */\r\n    @media screen and (min-width: 640px) {\r\n\r\n    }\r\n    /* desktop */\r\n    @media screen and (min-width: 1280px) {\r\n      min-width: 300px;\r\n      margin-right: 30px;\r\n    }\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  /* mobile */\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  margin-top: 20px;\r\n  .loading {\r\n    width: 30px;\r\n    height: 30px;\r\n    margin: auto;\r\n  }\r\n  .loading-wrap {\r\n    text-align: center;\r\n  }\r\n  /* desktop */\r\n  @media screen and (min-width: 1280px) {\r\n    width: 100%;\r\n    margin-top: 0px;\r\n  }\r\n\r\n`\r\n\r\nexport { DashboardWrapper, FilterWrapper, ContentWrapper} ;","import styled from 'styled-components';\r\n\r\nconst FilterContent = styled.div`\r\n  padding-right: 20px;\r\n  padding-left: 20px;\r\n  padding-bottom: 20px;\r\n  .title {\r\n    padding-top: 10px;\r\n    font-size: 20px\r\n  }\r\n  .form-control {\r\n    margin-top: 30px;\r\n  }\r\n  .button {\r\n    margin-top: 80px;\r\n    text-align: right;\r\n  }\r\n  button {\r\n    width: 100%;\r\n  }\r\n  /* tablet */\r\n  @media screen and (min-width: 640px) {\r\n    .form-group {\r\n      display: flex;\r\n      justify-content: space-between;\r\n    }\r\n    .form-control {\r\n      width: 100%;\r\n      margin-right: 20px;\r\n    }\r\n    button, .button {\r\n      width: 100px;\r\n      margin-right: 0px;\r\n      margin-top: 27px;\r\n    }\r\n  }\r\n  /* desktop */\r\n  @media screen and (min-width: 1280px) {\r\n    .form-group {\r\n      display: block;\r\n    }\r\n    .button {\r\n      display: flex;\r\n      margin-top: 60px;\r\n      width: 100%;\r\n    }\r\n    button {\r\n      margin-left: auto;\r\n    }\r\n  }\r\n\r\n`\r\n\r\nexport { FilterContent }","import React, { useState } from 'react'\r\nimport './elements.css';\r\nconst Input = (props:any) => {\r\n  const [value, setValue] = useState<string>();\r\n  const { label, type=\"text\", onChange = () => {} } = props\r\n  const handleChange = (e:any) => {\r\n    setValue(e.target.value)\r\n    onChange(e.target.value)\r\n  }\r\n  return (\r\n    <div className=\"input-box\">\r\n      <p className=\"label\">{label && label}</p>\r\n      <input value={value} type={type} onChange={handleChange}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input;","import React, { useEffect, useState } from 'react';\r\nimport useOnclickOutside from \"react-cool-onclickoutside\";\r\n\r\nconst Select = (props:any) => {\r\n  const { onChange = () => {}, label } = props;\r\n  const { options = []} = props\r\n  const [value, setValue] = useState<string>(\"Release Date\");\r\n  const [show, setShow] = useState<boolean>(false);\r\n  const ref = useOnclickOutside(() => {\r\n    setShow(false);\r\n  })\r\n\r\n  const handleChange = (e:any) => {\r\n    setShow(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    onChange(value);\r\n  }, [value])\r\n\r\n  return (\r\n    <>\r\n      <p className=\"label\">{label && label}</p>\r\n      <div style={{display: 'flex', width: \"100%\"}}>\r\n        <div className=\"sort\">\r\n          <p>&#8593;</p>\r\n        </div>\r\n        <div className=\"select\">\r\n          <div className=\"select-value\" onClick={handleChange}>\r\n            {value}\r\n          </div>\r\n          {show && \r\n            <div ref={ref} className=\"absolute\">\r\n              {options.map((option:any, index:number) => \r\n                <div className=\"select-input\" key={index} onClick={() => {\r\n                  setValue(option.value);\r\n                  setShow(false)\r\n                }}>\r\n                  {option.value}\r\n                </div>\r\n              )}\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Select;","import React, { useState } from 'react'\r\nimport { FilterContent } from './index.styled';\r\nimport Input from '../Elements/Input';\r\nimport Select from '../Elements/Select';\r\nimport type { IFilter } from '../../interface/types';\r\nconst options = [\r\n  {value: \"Release Date\"},\r\n  {value: \"Score\"},\r\n  {value: \"Name\"}\r\n]\r\nconst initFilter = {\r\n  name: '',\r\n  score: 0,\r\n  sort: \"Release Date\"\r\n}\r\nconst Filter = (props:any) => {\r\n  const { getFilterObj } = props;\r\n  const [filterObj, setFilterObj] = useState<IFilter>(initFilter);\r\n  // seeting filter option\r\n  const handleChange = (name:string, value:any) => {\r\n    setFilterObj({...filterObj, [name]: value})\r\n    getFilterObj({ ...filterObj, [name]: value })\r\n  }\r\n// render component\r\n  return (\r\n    <FilterContent className=\"panel\">\r\n      <p className=\"title\">Filter Results</p>\r\n      <div className=\"form-control\">\r\n        <Input label=\"Name (contains)\" onChange={(e:any) => handleChange(\"name\", e)}/>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <div className=\"form-control\">\r\n          <Input label=\"Minimum Score\" type=\"number\" onChange={(e:any) => handleChange(\"score\", e)}/>\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <Select label=\"Order By\" options={options} onChange={(value:any) => handleChange(\"sort\", value)}/>\r\n        </div>\r\n        <div className=\"form-control button\">\r\n          <button>Clear</button>\r\n        </div>\r\n      </div>\r\n    </FilterContent>\r\n  )\r\n}\r\n\r\nexport default Filter;","import styled from 'styled-components';\r\n\r\nconst GameItemWrapper = styled.div`\r\n  display: block;\r\n  position: relative;\r\n  align-items: center;\r\n  background: #0e1a2b;\r\n  margin-bottom: 20px;\r\n  height: 350px;\r\n  \r\n  .item-img {\r\n    overflow: hidden;\r\n    height: 150px;\r\n    width: 100%;\r\n    background: black;\r\n  }\r\n  .item-name {\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    margin-top: 20px;\r\n  }\r\n  .item-body {\r\n    padding: 20px;\r\n    padding-top: 0px;\r\n    height: 165px;\r\n    overflow: hidden;\r\n  }\r\n  .item-summary {\r\n    margin-top: 15px;\r\n  }\r\n  .item-rating {\r\n    position: absolute;\r\n    top: 20px;\r\n    right: 20px;\r\n  }\r\n  .item-rating > div {\r\n    margin: auto;\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    background: #568de5;\r\n    align-items: center;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  @media screen and (min-width: 640px) {\r\n    display: flex;\r\n    height: 150px;\r\n    .item-img {\r\n      min-width: 150px;\r\n      max-width: 150px;\r\n    }\r\n    .item-rating {\r\n      position: relative;\r\n      margin-left: 20px;\r\n    }\r\n    .item-name {\r\n      margin-top: 0px\r\n    }\r\n    .item-body {\r\n      height: 108px;\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport { GameItemWrapper }","import React from 'react';\r\nimport type { IGameCard } from '../../interface/types';\r\nimport { GameItemWrapper } from './GameItem.Styled';\r\n\r\nconst GameItem = (props:IGameCard) => {\r\n  const releaseDate = new Date(props.first_release_date);\r\n  let date = releaseDate.getDate() > 9 ? releaseDate.getDate() : '0' + releaseDate.getDate();\r\n  let month = releaseDate.getMonth() > 8 ? releaseDate.getMonth() : '0' + releaseDate.getMonth();  \r\n  return (\r\n    <GameItemWrapper>\r\n      <div className=\"item-img\">\r\n      </div>\r\n      <div className=\"item-body\">\r\n        <p className=\"item-name\">{props.name}</p>\r\n        <p>Release Date: {`${date}/${month}/${releaseDate.getFullYear()}`}</p>\r\n        <p className=\"item-summary\">{props.summary}</p>\r\n      </div>\r\n      <div className=\"item-rating\">\r\n        <div>\r\n          {Math.floor(props.rating)}\r\n        </div>\r\n      </div>\r\n    </GameItemWrapper>\r\n  )\r\n}\r\n\r\n\r\nexport default GameItem;","import React, { useEffect, useState } from 'react'\r\nimport { objSort } from '../../utils/function';\r\nimport { \r\n  DashboardWrapper,\r\n  FilterWrapper,\r\n  ContentWrapper\r\n } from './Dashboard.Styled';\r\nimport Filter from '../../components/filter';\r\nimport type { IFilter, IGameCard } from '../../interface/types';\r\nimport GameItem from '../../components/content/GameItem';\r\nimport Axios from 'axios';\r\n\r\nlet Store:any = []\r\nlet initFilter = { name: '', score: 0, sort: 'Release Date' }\r\n\r\nconst Dashbaord = () => {\r\n  const [items, setItems] = useState<IGameCard[]>([])\r\n  const [loading, setLoading] = useState<boolean>(true)\r\n  const [filterObj, setFilterObj] = useState<IFilter>()\r\n\r\n  useEffect(() => {\r\n    Axios.get('https://public.connectnow.org.uk/applicant-test')\r\n      .then((res:any):void => {\r\n        setLoading(false)\r\n        Store = res.data\r\n        setItems(res.data)\r\n        setFilterObj(initFilter)\r\n      })\r\n      .catch((err:any) => {\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(filterObj) {\r\n      let filteredItems = []\r\n      filteredItems = Store.filter((item:any) => {\r\n        let pass = true\r\n        if(item.name.toUpperCase().indexOf(filterObj.name.toUpperCase()) < 0)\r\n          pass = false\r\n        if(parseInt(item.rating) < Number(filterObj.score))\r\n          pass = false\r\n        return pass\r\n      })\r\n\r\n      switch(filterObj.sort) {\r\n        case \"Release Date\":\r\n          setItems(objSort(filteredItems, \"first_release_date\", true))\r\n          break;\r\n        case \"Name\":\r\n          setItems(objSort(filteredItems, \"name\", false))\r\n          break;\r\n        case \"Score\":\r\n          setItems(objSort(filteredItems, \"rating\", true))\r\n          break;\r\n        default:\r\n          setItems(objSort(filteredItems, \"first_release_date\", true))\r\n          break;\r\n      }\r\n      setItems(filteredItems)\r\n    }\r\n  }, [filterObj])\r\n  \r\n  return (\r\n      <DashboardWrapper>\r\n        <FilterWrapper>\r\n          <Filter getFilterObj={(Obj:IFilter) => setFilterObj(Obj)}/>\r\n        </FilterWrapper>\r\n        <ContentWrapper>\r\n          {!loading ?\r\n            items.map((item:IGameCard, index:number) => \r\n              <GameItem\r\n                key={index}\r\n                name={item.name} \r\n                first_release_date={new Date(item.first_release_date)} \r\n                id={item.id} \r\n                summary={item.summary} \r\n                rating={item.rating}\r\n              /> \r\n            ) :\r\n            <div className=\"loading-wrap\">\r\n              <img className=\"loading\" src=\"loading.jpg\"/>\r\n            </div>\r\n          }\r\n        </ContentWrapper>\r\n      </DashboardWrapper>\r\n  )\r\n}\r\n\r\nexport default Dashbaord","import styled from 'styled-components';\r\n\r\nconst ContactWrapper = styled.div`\r\n    /* mobile */\r\n    padding: 0 20px;\r\n    margin: auto;\r\n    max-width: 100%;\r\n    .title {\r\n      font-size: 24px;\r\n      font-weight: 600;\r\n    }\r\n    .description {\r\n      margin-top: 20px;\r\n    }\r\n    .form-group {\r\n      display: block;\r\n    }\r\n    .form-control {\r\n      margin-top: 25px;\r\n      width: 100%;\r\n      padding-left: 10px;\r\n      padding-right: 10px;\r\n    }\r\n    .contact-form {\r\n      margin-top: 30px;\r\n      background-color: #0e1a2b;\r\n      font-weight: bold;\r\n      padding: 20px 0;\r\n      padding-left: 10px;\r\n      padding-right: 30px;\r\n    }\r\n    .send-button {\r\n      margin-left: auto;\r\n      width: fit-content;\r\n    }\r\n    /* Tablet */\r\n    @media screen and (min-width: 640px) {\r\n      max-width: 640px;\r\n      .form-group {\r\n        display: flex;\r\n      }\r\n      .contact-form {\r\n        padding: 20px;\r\n      }\r\n    }\r\n    /* desktop */\r\n    @media screen and (min-width: 1280px) {\r\n\r\n    }\r\n`;\r\n\r\nexport { ContactWrapper } ;","import React from 'react';\r\n\r\nconst TextArea = (props:any) => {\r\n  const { label, value, handleChange = () => {} } = props\r\n  return (\r\n    <div className=\"textarea-box\">\r\n      <p className=\"label\">{label && label}</p>\r\n      <textarea className=\"textarea\" value={value} onChange={handleChange}/>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default TextArea;","import React from 'react';\r\nimport { ContactWrapper } from './Contact.Styled';\r\nimport { contactDescription } from '../../static/constant';\r\nimport Input from '../../components/Elements/Input';\r\nimport TextArea from '../../components/Elements/TextArea';\r\nconst Contact = () => {\r\n  return (\r\n    <ContactWrapper>\r\n      <div>\r\n        <p className=\"title\">GET IN TOUCH</p>\r\n        <p className=\"description\">{contactDescription}</p>\r\n      </div>\r\n      <div className=\"contact-form\">\r\n        <div className=\"form-control\">\r\n          <p className=\"\">Contact Form</p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <div className=\"form-control\">\r\n            <Input label=\"Name\"/>\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <Input label=\"Email Address\"/>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <div className=\"form-control\">\r\n            <TextArea label=\"Message\"/>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <div className=\"form-control send-button\">\r\n            <button>Send</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ContactWrapper>\r\n  )\r\n}\r\n\r\nexport default Contact","const contactDescription = \"Trysail transom furl sea Legs scallywag Jack Ketch chandler Mizzenmat reff sails skysail. Shiver me timbers loot bucko belaying pin Sea Legs boom gunwalls booty jury most fore.\"\r\n\r\nexport { contactDescription }","import styled from 'styled-components';\r\n\r\nconst HeaderWrapper = styled.div`\r\n  margin-bottom: 30px;\r\n  margin-left: 20px;\r\n  padding-top: 20px;\r\n  display: block;\r\n  a {\r\n    text-decoration: none;\r\n    color: white;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n  }\r\n  .link {\r\n    padding: 10px;\r\n  }\r\n  a:hover {\r\n    opacity: 0.8;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    display: flex;\r\n    .link {\r\n      padding: 20px;\r\n    }\r\n  }\r\n`\r\n\r\nexport { HeaderWrapper }","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { HeaderWrapper } from './Header.styled';\r\n\r\nconst GameItem = () => {\r\n  return (\r\n    <HeaderWrapper>\r\n      <div className=\"link\">\r\n        <Link to=\"/contact\">CONTACT</Link>\r\n      </div>\r\n      <div className=\"link\">\r\n        <Link to=\"/\">VIDEO GAMES</Link>\r\n      </div>\r\n    </HeaderWrapper>\r\n  )\r\n}\r\n\r\n\r\nexport default GameItem;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Dashbaord from '../pages/dashboard/Dashboard';\r\nimport Contact from '../pages/contact/Contact';\r\nimport Header from '../components/header/Header';\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Route exact path=\"/\">\r\n        <Dashbaord />\r\n      </Route>\r\n      <Route path=\"/contact\">\r\n        <Contact />\r\n      </Route>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default AppRouter;","import React from 'react';\nimport AppRouter from './routes/AppRouter';\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"app-wrapper\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/global.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}